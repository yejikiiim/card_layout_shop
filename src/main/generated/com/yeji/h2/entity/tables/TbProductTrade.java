/*
 * This file is generated by jOOQ.
 */
package com.yeji.h2.entity.tables;


import com.yeji.h2.entity.DefaultSchema;
import com.yeji.h2.entity.tables.records.TbProductTradeRecord;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Row11;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 상품 주문정보 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbProductTrade extends TableImpl<TbProductTradeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>TB_PRODUCT_TRADE</code>
     */
    public static final TbProductTrade TB_PRODUCT_TRADE = new TbProductTrade();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbProductTradeRecord> getRecordType() {
        return TbProductTradeRecord.class;
    }

    /**
     * The column <code>TB_PRODUCT_TRADE.ID</code>.
     */
    public final TableField<TbProductTradeRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.PRODUCT_MASTER_ID</code>.
     */
    public final TableField<TbProductTradeRecord, Integer> PRODUCT_MASTER_ID = createField(DSL.name("PRODUCT_MASTER_ID"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.AMOUNT</code>.
     */
    public final TableField<TbProductTradeRecord, Integer> AMOUNT = createField(DSL.name("AMOUNT"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.TOTAL_PRICE</code>.
     */
    public final TableField<TbProductTradeRecord, Integer> TOTAL_PRICE = createField(DSL.name("TOTAL_PRICE"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.CUSTOMER_NAME</code>.
     */
    public final TableField<TbProductTradeRecord, String> CUSTOMER_NAME = createField(DSL.name("CUSTOMER_NAME"), SQLDataType.VARCHAR(254).nullable(false), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.CUSTOMER_PHONE_NUM</code>.
     */
    public final TableField<TbProductTradeRecord, String> CUSTOMER_PHONE_NUM = createField(DSL.name("CUSTOMER_PHONE_NUM"), SQLDataType.VARCHAR(254).nullable(false), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.IS_DELETED</code>.
     */
    public final TableField<TbProductTradeRecord, Integer> IS_DELETED = createField(DSL.name("IS_DELETED"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.CREATED_ID</code>.
     */
    public final TableField<TbProductTradeRecord, String> CREATED_ID = createField(DSL.name("CREATED_ID"), SQLDataType.VARCHAR(254).defaultValue(DSL.field("'ADMIN'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.CREATED_AT</code>.
     */
    public final TableField<TbProductTradeRecord, Timestamp> CREATED_AT = createField(DSL.name("CREATED_AT"), SQLDataType.TIMESTAMP(6).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.UPDATED_ID</code>.
     */
    public final TableField<TbProductTradeRecord, String> UPDATED_ID = createField(DSL.name("UPDATED_ID"), SQLDataType.VARCHAR(254).defaultValue(DSL.field("'ADMIN'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>TB_PRODUCT_TRADE.UPDATED_AT</code>.
     */
    public final TableField<TbProductTradeRecord, Timestamp> UPDATED_AT = createField(DSL.name("UPDATED_AT"), SQLDataType.TIMESTAMP(6).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    private TbProductTrade(Name alias, Table<TbProductTradeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbProductTrade(Name alias, Table<TbProductTradeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상품 주문정보 테이블"), TableOptions.table());
    }

    /**
     * Create an aliased <code>TB_PRODUCT_TRADE</code> table reference
     */
    public TbProductTrade(String alias) {
        this(DSL.name(alias), TB_PRODUCT_TRADE);
    }

    /**
     * Create an aliased <code>TB_PRODUCT_TRADE</code> table reference
     */
    public TbProductTrade(Name alias) {
        this(alias, TB_PRODUCT_TRADE);
    }

    /**
     * Create a <code>TB_PRODUCT_TRADE</code> table reference
     */
    public TbProductTrade() {
        this(DSL.name("TB_PRODUCT_TRADE"), null);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<TbProductTradeRecord, Integer> getIdentity() {
        return (Identity<TbProductTradeRecord, Integer>) super.getIdentity();
    }

    @Override
    public TbProductTrade as(String alias) {
        return new TbProductTrade(DSL.name(alias), this);
    }

    @Override
    public TbProductTrade as(Name alias) {
        return new TbProductTrade(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TbProductTrade rename(String name) {
        return new TbProductTrade(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TbProductTrade rename(Name name) {
        return new TbProductTrade(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row11<Integer, Integer, Integer, Integer, String, String, Integer, String, Timestamp, String, Timestamp> fieldsRow() {
        return (Row11) super.fieldsRow();
    }
}
