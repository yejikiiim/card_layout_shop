/*
 * This file is generated by jOOQ.
 */
package com.yeji.h2.entity.tables;


import com.yeji.h2.entity.DefaultSchema;
import com.yeji.h2.entity.tables.records.TbProductMasterRecord;

import java.sql.Timestamp;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Row13;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * 상품정보 메인 테이블
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TbProductMaster extends TableImpl<TbProductMasterRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>TB_PRODUCT_MASTER</code>
     */
    public static final TbProductMaster TB_PRODUCT_MASTER = new TbProductMaster();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TbProductMasterRecord> getRecordType() {
        return TbProductMasterRecord.class;
    }

    /**
     * The column <code>TB_PRODUCT_MASTER.ID</code>.
     */
    public final TableField<TbProductMasterRecord, Integer> ID = createField(DSL.name("ID"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.GROUP_CODE</code>.
     */
    public final TableField<TbProductMasterRecord, String> GROUP_CODE = createField(DSL.name("GROUP_CODE"), SQLDataType.VARCHAR(254).nullable(false), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.PRODUCT_NAME</code>.
     */
    public final TableField<TbProductMasterRecord, String> PRODUCT_NAME = createField(DSL.name("PRODUCT_NAME"), SQLDataType.VARCHAR(254).nullable(false), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.PRODUCT_DETAIL_OPTION</code>.
     */
    public final TableField<TbProductMasterRecord, String> PRODUCT_DETAIL_OPTION = createField(DSL.name("PRODUCT_DETAIL_OPTION"), SQLDataType.VARCHAR(254).nullable(false), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.PRICE</code>.
     */
    public final TableField<TbProductMasterRecord, Integer> PRICE = createField(DSL.name("PRICE"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.IMAGE</code>.
     */
    public final TableField<TbProductMasterRecord, String> IMAGE = createField(DSL.name("IMAGE"), SQLDataType.VARCHAR(254), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.STOCK</code>.
     */
    public final TableField<TbProductMasterRecord, Integer> STOCK = createField(DSL.name("STOCK"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.DESCRIPTION</code>.
     */
    public final TableField<TbProductMasterRecord, String> DESCRIPTION = createField(DSL.name("DESCRIPTION"), SQLDataType.CLOB, this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.IS_DELETED</code>.
     */
    public final TableField<TbProductMasterRecord, Integer> IS_DELETED = createField(DSL.name("IS_DELETED"), SQLDataType.INTEGER.nullable(false).defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.CREATED_ID</code>.
     */
    public final TableField<TbProductMasterRecord, String> CREATED_ID = createField(DSL.name("CREATED_ID"), SQLDataType.VARCHAR(254).defaultValue(DSL.field("'ADMIN'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.CREATED_AT</code>.
     */
    public final TableField<TbProductMasterRecord, Timestamp> CREATED_AT = createField(DSL.name("CREATED_AT"), SQLDataType.TIMESTAMP(6).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.UPDATED_ID</code>.
     */
    public final TableField<TbProductMasterRecord, String> UPDATED_ID = createField(DSL.name("UPDATED_ID"), SQLDataType.VARCHAR(254).defaultValue(DSL.field("'ADMIN'", SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>TB_PRODUCT_MASTER.UPDATED_AT</code>.
     */
    public final TableField<TbProductMasterRecord, Timestamp> UPDATED_AT = createField(DSL.name("UPDATED_AT"), SQLDataType.TIMESTAMP(6).defaultValue(DSL.field("CURRENT_TIMESTAMP", SQLDataType.TIMESTAMP)), this, "");

    private TbProductMaster(Name alias, Table<TbProductMasterRecord> aliased) {
        this(alias, aliased, null);
    }

    private TbProductMaster(Name alias, Table<TbProductMasterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("상품정보 메인 테이블"), TableOptions.table());
    }

    /**
     * Create an aliased <code>TB_PRODUCT_MASTER</code> table reference
     */
    public TbProductMaster(String alias) {
        this(DSL.name(alias), TB_PRODUCT_MASTER);
    }

    /**
     * Create an aliased <code>TB_PRODUCT_MASTER</code> table reference
     */
    public TbProductMaster(Name alias) {
        this(alias, TB_PRODUCT_MASTER);
    }

    /**
     * Create a <code>TB_PRODUCT_MASTER</code> table reference
     */
    public TbProductMaster() {
        this(DSL.name("TB_PRODUCT_MASTER"), null);
    }

    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    @Override
    public Identity<TbProductMasterRecord, Integer> getIdentity() {
        return (Identity<TbProductMasterRecord, Integer>) super.getIdentity();
    }

    @Override
    public TbProductMaster as(String alias) {
        return new TbProductMaster(DSL.name(alias), this);
    }

    @Override
    public TbProductMaster as(Name alias) {
        return new TbProductMaster(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TbProductMaster rename(String name) {
        return new TbProductMaster(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TbProductMaster rename(Name name) {
        return new TbProductMaster(name, null);
    }

    // -------------------------------------------------------------------------
    // Row13 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, String, String, String, Integer, String, Integer, String, Integer, String, Timestamp, String, Timestamp> fieldsRow() {
        return (Row13) super.fieldsRow();
    }
}
